{
    "sourceFile": "src/main/java/es/ies/puerto/PruebaApp.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1745915230293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745915276320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,13 @@\n \n import es.ies.puerto.modelo.db.entidades.*;\n import es.ies.puerto.modelo.db.services.*;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.StandardCopyOption;\n+import java.sql.SQLException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n import java.util.List;\n \n@@ -102,7 +107,40 @@\n         List<Prestamo> activos = prestamoService.obtenerPrestamosActivos();\n         System.out.println(\"Préstamos activos:\");\n         activos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n     }\n+    public void tearDown() throws SQLException {\n+       \n+        File originalDB = new File(\"src/main/resources/biblioteca.db\");\n+        File backupDB = new File(\"src/main/backup/biblioteca.db\");  \n+        \n+        System.out.println(\"Path original: \" + originalDB.getAbsolutePath());\n+        System.out.println(\"Path backup: \" + backupDB.getAbsolutePath());\n+        System.out.println(\"Backup existe? \" + backupDB.exists());\n     \n+\n+        if (!backupDB.exists()) {\n+            throw new SQLException(\"El archivo de backup no existe en: \" + backupDB.getAbsolutePath());\n+        }\n+    \n+\n+        if (originalDB.exists()) {\n+            boolean deleted = originalDB.delete();\n+            if (!deleted) {\n+                throw new SQLException(\"No se pudo eliminar la base de datos original\");\n+            }\n+        }\n+    \n+        try {\n+            Files.copy(\n+                backupDB.toPath(),\n+                originalDB.toPath(),\n+                StandardCopyOption.REPLACE_EXISTING\n+            );\n+            System.out.println(\"Base de datos restaurada exitosamente\");\n+        } catch (IOException e) {\n+            throw new SQLException(\"Error copiando el backup\", e);\n+        }\n+    }\n+\n }\n \n"
                },
                {
                    "date": 1745915285586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         List<Prestamo> activos = prestamoService.obtenerPrestamosActivos();\n         System.out.println(\"Préstamos activos:\");\n         activos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n     }\n-    public void tearDown() throws SQLException {\n+    static void tearDown() throws SQLException {\n        \n         File originalDB = new File(\"src/main/resources/biblioteca.db\");\n         File backupDB = new File(\"src/main/backup/biblioteca.db\");  \n         \n"
                },
                {
                    "date": 1745915291997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         List<Prestamo> activos = prestamoService.obtenerPrestamosActivos();\n         System.out.println(\"Préstamos activos:\");\n         activos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n     }\n-    static void tearDown() throws SQLException {\n+    static void tearDown()  {\n        \n         File originalDB = new File(\"src/main/resources/biblioteca.db\");\n         File backupDB = new File(\"src/main/backup/biblioteca.db\");  \n         \n"
                },
                {
                    "date": 1745915300218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         List<Prestamo> activos = prestamoService.obtenerPrestamosActivos();\n         System.out.println(\"Préstamos activos:\");\n         activos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n     }\n-    static void tearDown()  {\n+    static void tearDown() throws SQLException {\n        \n         File originalDB = new File(\"src/main/resources/biblioteca.db\");\n         File backupDB = new File(\"src/main/backup/biblioteca.db\");  \n         \n"
                },
                {
                    "date": 1745915325587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n \n         prestamosPorUsuario(\"USR001\");\n         prestamosVencidos(\"2024-04-01\");\n         prestamosActivos();\n+        tearDown()\n     }\n \n     static Date getFecha(String fecha) {\n         try {\n"
                },
                {
                    "date": 1745915338129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n \n         prestamosPorUsuario(\"USR001\");\n         prestamosVencidos(\"2024-04-01\");\n         prestamosActivos();\n-        tearDown()\n+        tr\n+        tearDown();\n     }\n \n     static Date getFecha(String fecha) {\n         try {\n"
                },
                {
                    "date": 1745915346220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,14 @@\n \n         prestamosPorUsuario(\"USR001\");\n         prestamosVencidos(\"2024-04-01\");\n         prestamosActivos();\n-        tr\n-        tearDown();\n+        try {\n+            tearDown();\n+        } catch (Exception e) {\n+           \n+        }\n+ \n     }\n \n     static Date getFecha(String fecha) {\n         try {\n"
                },
                {
                    "date": 1745915351853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         prestamosActivos();\n         try {\n             tearDown();\n         } catch (Exception e) {\n-           e\n+           e.\n         }\n  \n     }\n \n"
                }
            ],
            "date": 1745915230293,
            "name": "Commit-0",
            "content": "package es.ies.puerto;\n\nimport es.ies.puerto.modelo.db.entidades.*;\nimport es.ies.puerto.modelo.db.services.*;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.List;\n\npublic class PruebaApp {\n    static AutorService autorService = new AutorService();\n    static LibroService libroService = new LibroService();\n    static UsuarioService usuarioService = new UsuarioService();\n    static PrestamoService prestamoService = new PrestamoService();\n\n    public static void main(String[] args) {\n        crearAutor();\n        crearLibro();\n        crearUsuario();\n        crearPrestamo();\n\n        mostrarAutores();\n        mostrarLibros();\n        mostrarUsuarios();\n        mostrarPrestamos();\n\n        prestamosPorUsuario(\"USR001\");\n        prestamosVencidos(\"2024-04-01\");\n        prestamosActivos();\n    }\n\n    static Date getFecha(String fecha) {\n        try {\n            return new SimpleDateFormat(\"yyyy-MM-dd\").parse(fecha);\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    static void crearAutor() {\n        Autor autor = new Autor(\"12345678A\", \"Gabriel García Márquez\", \"Colombia\", getFecha(\"1927-03-06\"));\n        boolean creado = autorService.crearAutor(autor);\n        System.out.println(\"Autor creado: \" + creado);\n    }\n\n    static void crearLibro() {\n        Libro libro = new Libro(\"LIB-001\", \"Cien años de soledad\", \"12345678A\", getFecha(\"1967-05-30\"), \"Realismo mágico\");\n        boolean creado = libroService.crearLibro(libro);\n        System.out.println(\"Libro creado: \" + creado);\n    }\n\n    static void crearUsuario() {\n        Usuario usuario = new Usuario(\"USR001\", \"Juan Pérez\", \"juan@example.com\", \"600123123\", getFecha(\"2023-12-01\"));\n        boolean creado = usuarioService.crearUsuario(usuario);\n        System.out.println(\"Usuario creado: \" + creado);\n    }\n\n    static void crearPrestamo() {\n        Prestamo prestamo = new Prestamo(\"PRE001\", \"LIB-001\", \"USR001\", getFecha(\"2024-04-01\"), getFecha(\"2024-05-01\"));\n        boolean creado = prestamoService.crearPrestamo(prestamo);\n        System.out.println(\"Préstamo creado: \" + creado);\n    }\n\n    static void mostrarAutores() {\n        List<Autor> autores = autorService.obtenerTodosAutores();\n        System.out.println(\"Autores:\");\n        autores.forEach(a -> System.out.println(\" - \" + a.getNombre()));\n    }\n\n    static void mostrarLibros() {\n        List<Libro> libros = libroService.obtenerTodosLibros();\n        System.out.println(\"Libros:\");\n        libros.forEach(l -> System.out.println(\" - \" + l.getTitulo()));\n    }\n\n    static void mostrarUsuarios() {\n        List<Usuario> usuarios = usuarioService.obtenerTodosUsuarios();\n        System.out.println(\"Usuarios:\");\n        usuarios.forEach(u -> System.out.println(\" - \" + u.getNombre()));\n    }\n\n    static void mostrarPrestamos() {\n        List<Prestamo> prestamos = prestamoService.obtenerTodosPrestamos();\n        System.out.println(\"Préstamos:\");\n        prestamos.forEach(p -> System.out.println(\" - ID: \" + p.getIdPrestamo() + \", Libro: \" + p.getLibroId() + \", Usuario: \" + p.getUsuarioId()));\n    }\n\n    static void prestamosPorUsuario(String idUsuario) {\n        List<Prestamo> prestamos = prestamoService.obtenerPrestamosPorUsuario(idUsuario);\n        System.out.println(\"Préstamos del usuario \" + idUsuario + \":\");\n        prestamos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n    }\n\n    static void prestamosVencidos(String fechaStr) {\n        Date fecha = getFecha(fechaStr);\n        List<Prestamo> vencidos = prestamoService.obtenerPrestamosVencidos(fecha);\n        System.out.println(\"Préstamos vencidos antes de \" + fechaStr + \":\");\n        vencidos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n    }\n\n    static void prestamosActivos() {\n        List<Prestamo> activos = prestamoService.obtenerPrestamosActivos();\n        System.out.println(\"Préstamos activos:\");\n        activos.forEach(p -> System.out.println(\" - \" + p.getIdPrestamo()));\n    }\n    \n}\n\n"
        }
    ]
}